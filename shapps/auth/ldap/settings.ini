[AUTH]
#user from ldap
AUTH_TYPE_LDAP = 'ldap'
AUTH_DEFAULT_TYPE = ['ldap']

[AUTH_CONFIG]
ldap = {
        'title':'ldap users',
        'authenticate':'shapps.auth.ldap.authenticate'
}

[LDAP]
#example of ldap auth setting for windows AD
#you should use "server_param <= {" to overwrite all example setting
server_param = {
    'server_uri':'ldap://localhost',

    'bind_dn':'somedomain\\someuser', #openldap:'cn=someuser,dc=example,dc=com'
    'bind_pw':'someuser_pass',

    'user_base_dn':'ou=users,dc=example,dc=com', #openldap:'ou=People,dc=example,dc=com',
    'group_base_dn':'ou=groups,dc=example,dc=com', #openldap:'ou=Groups,dc=example,dc=com',

    #for these filters, you can google "LDAP Filters and Attributes for Users, Groups, and Containers" for reference
    'user_match_filter':'(&(sAMAccountName=%(username)s)(objectclass=user))', #openldap:'(uid=%(username)s)',
    'group_match_filter':'(&(sAMAccountName=%(groupname)s)(objectclass=group))', #openldap:'(o=%(groupname)s)',
    'user_search_filter':'(&(sAMAccountName=%(username)s*)(objectclass=user))', #openldap:'(uid=%(username)s*)',
    'group_search_filter':'(&(sAMAccountName=%(groupname)s*)(objectclass=group))', #openldap:'(o=%(groupname)s*)',

    #from_ldap:ldap attribute name, to_user:User table field name
    'user_attributes': {
        'name':'sAMAccountName',
        'givenname':'givenName',
        'surname':'sn',
        'aliasname':{
            'from_ldap':['displayName','%(sn)s %(givenName)s'],
            'to_user':'nickname'
        },
        'email':{
            'from_ldap':'mail',
            'to_user':'email',
        },
        #if settings.LDAP.sync_user_groups, 'memberof' will sync to user.groups
        #only accept string value
        'memberof':'memberOf',
    },

    #from_ldap:ldap attribute name, to_group:UserGroup table field name
    'group_attributes': {
        'email':'mail',
        'name':'sAMAccountName',
    },
}

user_case_sensitive = False
user_auto_create = True
group_auto_create = True
sync_user_groups = False
catch_all_ldap_exception = False

# sync groups through email, use it combined with sync_user_groups
# open status example:
# sync_user_groups = True
# email_domain_name_as_group = True
email_domain_name_as_group = False

[FUNCTIONS]
#return user object
get_user = 'shapps.auth.ldap.get_user'

#return usergroup object
get_usergroup = 'shapps.auth.ldap.get_usergroup'

#return ldap dict, only access ldap no access database
ldap_get_user = 'shapps.auth.ldap.ldap_get_user'
ldap_get_usergroup = 'shapps.auth.ldap.ldap_get_usergroup'
ldap_search_user = 'shapps.auth.ldap.ldap_search_user'
ldap_search_usergroup = 'shapps.auth.ldap.ldap_search_usergroup'

[LOG.Loggers]
shapps.auth.ldap = {'level':'info'}
